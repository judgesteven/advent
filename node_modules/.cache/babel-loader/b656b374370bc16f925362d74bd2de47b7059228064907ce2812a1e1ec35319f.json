{"ast":null,"code":"// Mock data service for testing without GameLayer API\n\n// Mock user data\nexport const mockUser = {\n  id: 'user-1',\n  name: 'John Doe',\n  email: 'john.doe@example.com',\n  avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n  totalPoints: 1250,\n  gems: 45,\n  badges: [{\n    id: 'badge-1',\n    name: 'Early Bird',\n    description: 'Completed first task of the month',\n    icon: '🐦',\n    rarity: 'common',\n    unlockedAt: new Date('2024-12-01')\n  }, {\n    id: 'badge-2',\n    name: 'Streak Master',\n    description: 'Completed 5 tasks in a row',\n    icon: '🔥',\n    rarity: 'rare',\n    unlockedAt: new Date('2024-12-05')\n  }, {\n    id: 'badge-3',\n    name: 'Quiz Champion',\n    description: 'Answered 10 quiz questions correctly',\n    icon: '🧠',\n    rarity: 'epic',\n    unlockedAt: new Date('2024-12-10')\n  }]\n};\n\n// Mock tasks\nexport const mockTasks = [{\n  id: 'task-1',\n  title: 'Holiday Trivia',\n  description: 'Test your knowledge about holiday traditions around the world!',\n  type: 'quiz',\n  points: 100,\n  gemReward: 5,\n  content: {\n    question: 'Which country is credited with starting the Christmas tree tradition?',\n    options: ['Germany', 'England', 'France', 'Italy'],\n    correctAnswer: 0\n  },\n  completionCriteria: {\n    correctAnswer: 0\n  }\n}, {\n  id: 'task-2',\n  title: 'Share Your Gratitude',\n  description: 'Write about something you\\'re grateful for this holiday season.',\n  type: 'survey',\n  points: 75,\n  gemReward: 3,\n  content: {\n    question: 'What are you most grateful for this holiday season?'\n  },\n  completionCriteria: {\n    minLength: 50\n  }\n}, {\n  id: 'task-3',\n  title: 'Random Act of Kindness',\n  description: 'Perform a random act of kindness and share your experience.',\n  type: 'action',\n  points: 150,\n  gemReward: 8,\n  content: {\n    instructions: 'Do something kind for someone today - it could be as simple as holding a door, giving a compliment, or helping a neighbor.',\n    requiresProof: true\n  },\n  completionCriteria: {\n    requiresDescription: true\n  }\n}, {\n  id: 'task-4',\n  title: 'Holiday Recipe Challenge',\n  description: 'Share your favorite holiday recipe or create a new one!',\n  type: 'challenge',\n  points: 200,\n  gemReward: 10,\n  content: {\n    challenge: 'Share a holiday recipe (traditional or your own creation) with ingredients and instructions.'\n  },\n  completionCriteria: {\n    minLength: 100\n  }\n}];\n\n// Mock calendar data with more engaging themes\nexport const generateMockCalendar = () => {\n  const calendar = [];\n  const today = new Date();\n  const currentDay = today.getDate();\n  const currentMonth = today.getMonth() + 1;\n  const isDecember = currentMonth === 12;\n\n  // More varied and engaging icons\n  const festiveIcons = ['🎄', '🎁', '⭐', '🔔', '🕯️', '🦌', '⛄', '🎅', '🤶', '🧝', '🎪', '🎭', '🎨', '🎵', '🎯', '🎲', '🍪', '🥛', '🍫', '🧁', '❄️', '☃️', '🌟', '✨', '🎊'];\n  for (let day = 1; day <= 25; day++) {\n    const date = new Date(2024, 11, day); // December 2024\n    const isUnlocked = isDecember ? day <= currentDay : day <= 8; // Mock: first 8 days unlocked\n    const isCompleted = day <= 3; // Mock: first 3 days completed\n\n    // Create more varied themes\n    const themeVariations = [{\n      bg: '#dc2626',\n      border: '#dc2626'\n    },\n    // Red\n    {\n      bg: '#16a34a',\n      border: '#16a34a'\n    },\n    // Green  \n    {\n      bg: '#f59e0b',\n      border: '#f59e0b'\n    },\n    // Amber\n    {\n      bg: '#8b5cf6',\n      border: '#8b5cf6'\n    },\n    // Purple\n    {\n      bg: '#06b6d4',\n      border: '#06b6d4'\n    } // Cyan\n    ];\n    const theme = themeVariations[day % themeVariations.length];\n\n    // Completion images for completed days\n    const completionImages = ['https://images.unsplash.com/photo-1512389142860-9c449e58a543?w=400&h=400&fit=crop&crop=center',\n    // Christmas cookies\n    'https://images.unsplash.com/photo-1544161515-4ab6ce6db874?w=400&h=400&fit=crop&crop=center',\n    // Christmas tree\n    'https://images.unsplash.com/photo-1576919228236-a097c32a5cd4?w=400&h=400&fit=crop&crop=center',\n    // Christmas presents\n    'https://images.unsplash.com/photo-1482517967863-00e15c9b44be?w=400&h=400&fit=crop&crop=center',\n    // Christmas lights\n    'https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?w=400&h=400&fit=crop&crop=center',\n    // Christmas ornaments\n    'https://images.unsplash.com/photo-1545558014-8692077e9b5c?w=400&h=400&fit=crop&crop=center',\n    // Hot cocoa\n    'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=400&fit=crop&crop=center',\n    // Christmas wreath\n    'https://images.unsplash.com/photo-1512909006721-3d6018887383?w=400&h=400&fit=crop&crop=center' // Christmas market\n    ];\n    calendar.push({\n      day,\n      date,\n      isUnlocked,\n      isCompleted,\n      task: isUnlocked ? mockTasks[Math.floor(Math.random() * mockTasks.length)] : undefined,\n      theme: {\n        backgroundColor: isCompleted ? theme.bg : isUnlocked ? theme.bg : '#374151',\n        textColor: '#ffffff',\n        borderColor: isCompleted ? theme.border : isUnlocked ? theme.border : '#6b7280',\n        icon: festiveIcons[day % festiveIcons.length],\n        image: isCompleted ? completionImages[day % completionImages.length] : undefined\n      }\n    });\n  }\n  return calendar;\n};\n\n// Mock leaderboard data\nexport const mockLeaderboard = [{\n  rank: 1,\n  user: {\n    id: 'user-2',\n    name: 'Sarah Johnson',\n    email: 'sarah@example.com',\n    avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n    totalPoints: 2150,\n    gems: 85,\n    badges: []\n  },\n  points: 2150,\n  completedTasks: 15\n}, {\n  rank: 2,\n  user: mockUser,\n  points: 1250,\n  completedTasks: 8\n}, {\n  rank: 3,\n  user: {\n    id: 'user-3',\n    name: 'Mike Chen',\n    email: 'mike@example.com',\n    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n    totalPoints: 980,\n    gems: 42,\n    badges: []\n  },\n  points: 980,\n  completedTasks: 6\n}, {\n  rank: 4,\n  user: {\n    id: 'user-4',\n    name: 'Emily Davis',\n    email: 'emily@example.com',\n    totalPoints: 750,\n    gems: 28,\n    badges: []\n  },\n  points: 750,\n  completedTasks: 5\n}, {\n  rank: 5,\n  user: {\n    id: 'user-5',\n    name: 'Alex Rodriguez',\n    email: 'alex@example.com',\n    totalPoints: 650,\n    gems: 22,\n    badges: []\n  },\n  points: 650,\n  completedTasks: 4\n}];\n\n// Mock rewards data\nexport const mockRewards = [{\n  id: 'reward-1',\n  name: 'Company T-Shirt',\n  description: 'Premium branded t-shirt in your size',\n  gemCost: 50,\n  image: 'https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?w=300&h=300&fit=crop',\n  stock: 15,\n  maxStock: 20,\n  isAvailable: true,\n  category: 'physical',\n  rarity: 'common'\n}, {\n  id: 'reward-2',\n  name: 'Wireless Headphones',\n  description: 'High-quality bluetooth headphones',\n  gemCost: 150,\n  image: 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=300&h=300&fit=crop',\n  stock: 3,\n  maxStock: 10,\n  isAvailable: true,\n  category: 'physical',\n  rarity: 'rare'\n}, {\n  id: 'reward-3',\n  name: 'Gift Card $25',\n  description: 'Amazon gift card worth $25',\n  gemCost: 75,\n  image: 'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?w=300&h=300&fit=crop',\n  stock: 8,\n  maxStock: 15,\n  isAvailable: true,\n  category: 'digital',\n  rarity: 'common'\n}, {\n  id: 'reward-4',\n  name: 'Team Lunch',\n  description: 'Join the team for a special lunch outing',\n  gemCost: 100,\n  image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?w=300&h=300&fit=crop',\n  stock: 0,\n  maxStock: 5,\n  isAvailable: false,\n  category: 'experience',\n  rarity: 'rare'\n}, {\n  id: 'reward-5',\n  name: 'MacBook Pro',\n  description: 'Latest MacBook Pro 14\" - Grand Prize!',\n  gemCost: 500,\n  image: 'https://images.unsplash.com/photo-1517336714731-489689fd1ca8?w=300&h=300&fit=crop',\n  stock: 1,\n  maxStock: 1,\n  isAvailable: true,\n  category: 'physical',\n  rarity: 'legendary'\n}, {\n  id: 'reward-6',\n  name: 'Coffee Mug',\n  description: 'Branded ceramic coffee mug',\n  gemCost: 25,\n  image: 'https://images.unsplash.com/photo-1514228742587-6b1558fcf93a?w=300&h=300&fit=crop',\n  stock: 12,\n  maxStock: 25,\n  isAvailable: true,\n  category: 'physical',\n  rarity: 'common'\n}];\n\n// Mock client configurations for different clients\nexport const mockClientConfigs = {\n  'christmas-corp': {\n    id: 'christmas-corp',\n    name: 'Christmas Corp',\n    logo: '/logo-christmas.png',\n    primaryColor: '#dc2626',\n    secondaryColor: '#16a34a',\n    accentColor: '#f59e0b',\n    backgroundColor: '#0f172a',\n    textColor: '#f8fafc',\n    fontFamily: 'Inter, system-ui, sans-serif',\n    calendarTitle: 'Christmas Corp Advent Calendar 2024',\n    welcomeMessage: 'Join our festive countdown! Complete daily challenges to earn rewards and climb the leaderboard.',\n    completionMessage: 'Congratulations! You\\'ve completed our Christmas journey. Happy holidays from all of us at Christmas Corp!',\n    socialLinks: {\n      website: 'https://christmascorp.com',\n      twitter: 'https://twitter.com/christmascorp',\n      instagram: 'https://instagram.com/christmascorp'\n    }\n  },\n  'winter-wonderland': {\n    id: 'winter-wonderland',\n    name: 'Winter Wonderland',\n    logo: '/logo-winter.png',\n    primaryColor: '#3b82f6',\n    secondaryColor: '#8b5cf6',\n    accentColor: '#06b6d4',\n    backgroundColor: '#1e1b4b',\n    textColor: '#e0e7ff',\n    fontFamily: 'Georgia, serif',\n    calendarTitle: 'Winter Wonderland Adventure',\n    welcomeMessage: 'Embark on a magical winter journey filled with daily surprises and challenges.',\n    completionMessage: 'You\\'ve conquered the winter wonderland! May your holidays be filled with magic and joy.',\n    socialLinks: {\n      website: 'https://winterwonderland.com'\n    }\n  },\n  'holiday-heroes': {\n    id: 'holiday-heroes',\n    name: 'Holiday Heroes',\n    logo: '/logo-heroes.png',\n    primaryColor: '#059669',\n    secondaryColor: '#dc2626',\n    accentColor: '#f59e0b',\n    backgroundColor: '#064e3b',\n    textColor: '#ecfdf5',\n    fontFamily: 'Roboto, sans-serif',\n    calendarTitle: 'Holiday Heroes Mission Calendar',\n    welcomeMessage: 'Every day is a new mission to spread holiday cheer. Are you ready to be a Holiday Hero?',\n    completionMessage: 'Mission accomplished, Hero! You\\'ve made this holiday season brighter for everyone.',\n    socialLinks: {\n      website: 'https://holidayheroes.org',\n      twitter: 'https://twitter.com/holidayheroes'\n    }\n  }\n};\n\n// Mock API service that mimics GameLayer API\nexport class MockGameLayerAPI {\n  // Default to authenticated for demo\n\n  static async getCurrentUser() {\n    if (!this.isAuthenticated) {\n      throw new Error('User not authenticated');\n    }\n    return mockUser;\n  }\n  static async loginUser(email, password) {\n    // Mock authentication - accept any email/password\n    this.isAuthenticated = true;\n    return mockUser;\n  }\n  static async registerUser(userData) {\n    this.isAuthenticated = true;\n    return {\n      ...mockUser,\n      name: userData.name,\n      email: userData.email,\n      totalPoints: 0,\n      gems: 0,\n      badges: []\n    };\n  }\n  static async getClientConfig() {\n    return mockClientConfigs[this.currentClient];\n  }\n  static async getCalendarData() {\n    return generateMockCalendar();\n  }\n  static async getTaskForDay(day) {\n    return {\n      ...mockTasks[Math.floor(Math.random() * mockTasks.length)],\n      id: `task-day-${day}`\n    };\n  }\n  static async submitTaskCompletion(taskId, submission) {\n    // Mock successful completion\n    const points = Math.floor(Math.random() * 100) + 50;\n    const gems = Math.floor(Math.random() * 10) + 3;\n    return {\n      success: true,\n      points,\n      gems,\n      badge: Math.random() > 0.7 ? mockUser.badges[0] : undefined\n    };\n  }\n  static async getLeaderboard() {\n    return mockLeaderboard;\n  }\n  static async getRewards() {\n    return mockRewards;\n  }\n  static async purchaseReward(rewardId) {\n    const reward = mockRewards.find(r => r.id === rewardId);\n    if (!reward) {\n      return {\n        success: false,\n        message: 'Reward not found'\n      };\n    }\n    if (!reward.isAvailable || reward.stock <= 0) {\n      return {\n        success: false,\n        message: 'Reward out of stock'\n      };\n    }\n    if (mockUser.gems < reward.gemCost) {\n      return {\n        success: false,\n        message: 'Not enough gems'\n      };\n    }\n\n    // Simulate purchase\n    reward.stock -= 1;\n    if (reward.stock <= 0) {\n      reward.isAvailable = false;\n    }\n    mockUser.gems -= reward.gemCost;\n    return {\n      success: true,\n      message: 'Reward purchased successfully!'\n    };\n  }\n  static async trackEvent(eventName, eventData) {\n    console.log('Mock event tracked:', eventName, eventData);\n  }\n  static setCurrentClient(clientId) {\n    this.currentClient = clientId;\n  }\n}\nMockGameLayerAPI.currentClient = 'christmas-corp';\nMockGameLayerAPI.isAuthenticated = true;","map":{"version":3,"names":["mockUser","id","name","email","avatar","totalPoints","gems","badges","description","icon","rarity","unlockedAt","Date","mockTasks","title","type","points","gemReward","content","question","options","correctAnswer","completionCriteria","minLength","instructions","requiresProof","requiresDescription","challenge","generateMockCalendar","calendar","today","currentDay","getDate","currentMonth","getMonth","isDecember","festiveIcons","day","date","isUnlocked","isCompleted","themeVariations","bg","border","theme","length","completionImages","push","task","Math","floor","random","undefined","backgroundColor","textColor","borderColor","image","mockLeaderboard","rank","user","completedTasks","mockRewards","gemCost","stock","maxStock","isAvailable","category","mockClientConfigs","logo","primaryColor","secondaryColor","accentColor","fontFamily","calendarTitle","welcomeMessage","completionMessage","socialLinks","website","twitter","instagram","MockGameLayerAPI","getCurrentUser","isAuthenticated","Error","loginUser","password","registerUser","userData","getClientConfig","currentClient","getCalendarData","getTaskForDay","submitTaskCompletion","taskId","submission","success","badge","getLeaderboard","getRewards","purchaseReward","rewardId","reward","find","r","message","trackEvent","eventName","eventData","console","log","setCurrentClient","clientId"],"sources":["/Users/stevenjudge/Desktop/AI/advent/advent-calendar/src/services/mockData.ts"],"sourcesContent":["// Mock data service for testing without GameLayer API\nimport { User, Task, Badge, LeaderboardEntry, ClientConfig, CalendarDay, Reward } from '../types';\n\n// Mock user data\nexport const mockUser: User = {\n  id: 'user-1',\n  name: 'John Doe',\n  email: 'john.doe@example.com',\n  avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n  totalPoints: 1250,\n  gems: 45,\n  badges: [\n    {\n      id: 'badge-1',\n      name: 'Early Bird',\n      description: 'Completed first task of the month',\n      icon: '🐦',\n      rarity: 'common',\n      unlockedAt: new Date('2024-12-01')\n    },\n    {\n      id: 'badge-2',\n      name: 'Streak Master',\n      description: 'Completed 5 tasks in a row',\n      icon: '🔥',\n      rarity: 'rare',\n      unlockedAt: new Date('2024-12-05')\n    },\n    {\n      id: 'badge-3',\n      name: 'Quiz Champion',\n      description: 'Answered 10 quiz questions correctly',\n      icon: '🧠',\n      rarity: 'epic',\n      unlockedAt: new Date('2024-12-10')\n    }\n  ]\n};\n\n// Mock tasks\nexport const mockTasks: Task[] = [\n  {\n    id: 'task-1',\n    title: 'Holiday Trivia',\n    description: 'Test your knowledge about holiday traditions around the world!',\n    type: 'quiz',\n    points: 100,\n    gemReward: 5,\n    content: {\n      question: 'Which country is credited with starting the Christmas tree tradition?',\n      options: ['Germany', 'England', 'France', 'Italy'],\n      correctAnswer: 0\n    },\n    completionCriteria: { correctAnswer: 0 }\n  },\n  {\n    id: 'task-2',\n    title: 'Share Your Gratitude',\n    description: 'Write about something you\\'re grateful for this holiday season.',\n    type: 'survey',\n    points: 75,\n    gemReward: 3,\n    content: {\n      question: 'What are you most grateful for this holiday season?'\n    },\n    completionCriteria: { minLength: 50 }\n  },\n  {\n    id: 'task-3',\n    title: 'Random Act of Kindness',\n    description: 'Perform a random act of kindness and share your experience.',\n    type: 'action',\n    points: 150,\n    gemReward: 8,\n    content: {\n      instructions: 'Do something kind for someone today - it could be as simple as holding a door, giving a compliment, or helping a neighbor.',\n      requiresProof: true\n    },\n    completionCriteria: { requiresDescription: true }\n  },\n  {\n    id: 'task-4',\n    title: 'Holiday Recipe Challenge',\n    description: 'Share your favorite holiday recipe or create a new one!',\n    type: 'challenge',\n    points: 200,\n    gemReward: 10,\n    content: {\n      challenge: 'Share a holiday recipe (traditional or your own creation) with ingredients and instructions.'\n    },\n    completionCriteria: { minLength: 100 }\n  }\n];\n\n// Mock calendar data with more engaging themes\nexport const generateMockCalendar = (): CalendarDay[] => {\n  const calendar: CalendarDay[] = [];\n  const today = new Date();\n  const currentDay = today.getDate();\n  const currentMonth = today.getMonth() + 1;\n  const isDecember = currentMonth === 12;\n\n  // More varied and engaging icons\n  const festiveIcons = [\n    '🎄', '🎁', '⭐', '🔔', '🕯️', '🦌', '⛄', '🎅', \n    '🤶', '🧝', '🎪', '🎭', '🎨', '🎵', '🎯', '🎲',\n    '🍪', '🥛', '🍫', '🧁', '❄️', '☃️', '🌟', '✨',\n    '🎊'\n  ];\n\n  for (let day = 1; day <= 25; day++) {\n    const date = new Date(2024, 11, day); // December 2024\n    const isUnlocked = isDecember ? day <= currentDay : day <= 8; // Mock: first 8 days unlocked\n    const isCompleted = day <= 3; // Mock: first 3 days completed\n    \n    // Create more varied themes\n    const themeVariations = [\n      { bg: '#dc2626', border: '#dc2626' }, // Red\n      { bg: '#16a34a', border: '#16a34a' }, // Green  \n      { bg: '#f59e0b', border: '#f59e0b' }, // Amber\n      { bg: '#8b5cf6', border: '#8b5cf6' }, // Purple\n      { bg: '#06b6d4', border: '#06b6d4' }, // Cyan\n    ];\n    \n    const theme = themeVariations[day % themeVariations.length];\n    \n    // Completion images for completed days\n    const completionImages = [\n      'https://images.unsplash.com/photo-1512389142860-9c449e58a543?w=400&h=400&fit=crop&crop=center', // Christmas cookies\n      'https://images.unsplash.com/photo-1544161515-4ab6ce6db874?w=400&h=400&fit=crop&crop=center', // Christmas tree\n      'https://images.unsplash.com/photo-1576919228236-a097c32a5cd4?w=400&h=400&fit=crop&crop=center', // Christmas presents\n      'https://images.unsplash.com/photo-1482517967863-00e15c9b44be?w=400&h=400&fit=crop&crop=center', // Christmas lights\n      'https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?w=400&h=400&fit=crop&crop=center', // Christmas ornaments\n      'https://images.unsplash.com/photo-1545558014-8692077e9b5c?w=400&h=400&fit=crop&crop=center', // Hot cocoa\n      'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=400&fit=crop&crop=center', // Christmas wreath\n      'https://images.unsplash.com/photo-1512909006721-3d6018887383?w=400&h=400&fit=crop&crop=center', // Christmas market\n    ];\n    \n    calendar.push({\n      day,\n      date,\n      isUnlocked,\n      isCompleted,\n      task: isUnlocked ? mockTasks[Math.floor(Math.random() * mockTasks.length)] : undefined,\n      theme: {\n        backgroundColor: isCompleted ? theme.bg : isUnlocked ? theme.bg : '#374151',\n        textColor: '#ffffff',\n        borderColor: isCompleted ? theme.border : isUnlocked ? theme.border : '#6b7280',\n        icon: festiveIcons[day % festiveIcons.length],\n        image: isCompleted ? completionImages[day % completionImages.length] : undefined\n      }\n    });\n  }\n\n  return calendar;\n};\n\n// Mock leaderboard data\nexport const mockLeaderboard: LeaderboardEntry[] = [\n  {\n    rank: 1,\n    user: {\n      id: 'user-2',\n      name: 'Sarah Johnson',\n      email: 'sarah@example.com',\n      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n      totalPoints: 2150,\n      gems: 85,\n      badges: []\n    },\n    points: 2150,\n    completedTasks: 15\n  },\n  {\n    rank: 2,\n    user: mockUser,\n    points: 1250,\n    completedTasks: 8\n  },\n  {\n    rank: 3,\n    user: {\n      id: 'user-3',\n      name: 'Mike Chen',\n      email: 'mike@example.com',\n      avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      totalPoints: 980,\n      gems: 42,\n      badges: []\n    },\n    points: 980,\n    completedTasks: 6\n  },\n  {\n    rank: 4,\n    user: {\n      id: 'user-4',\n      name: 'Emily Davis',\n      email: 'emily@example.com',\n      totalPoints: 750,\n      gems: 28,\n      badges: []\n    },\n    points: 750,\n    completedTasks: 5\n  },\n  {\n    rank: 5,\n    user: {\n      id: 'user-5',\n      name: 'Alex Rodriguez',\n      email: 'alex@example.com',\n      totalPoints: 650,\n      gems: 22,\n      badges: []\n    },\n    points: 650,\n    completedTasks: 4\n  }\n];\n\n// Mock rewards data\nexport const mockRewards: Reward[] = [\n  {\n    id: 'reward-1',\n    name: 'Company T-Shirt',\n    description: 'Premium branded t-shirt in your size',\n    gemCost: 50,\n    image: 'https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?w=300&h=300&fit=crop',\n    stock: 15,\n    maxStock: 20,\n    isAvailable: true,\n    category: 'physical',\n    rarity: 'common'\n  },\n  {\n    id: 'reward-2',\n    name: 'Wireless Headphones',\n    description: 'High-quality bluetooth headphones',\n    gemCost: 150,\n    image: 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=300&h=300&fit=crop',\n    stock: 3,\n    maxStock: 10,\n    isAvailable: true,\n    category: 'physical',\n    rarity: 'rare'\n  },\n  {\n    id: 'reward-3',\n    name: 'Gift Card $25',\n    description: 'Amazon gift card worth $25',\n    gemCost: 75,\n    image: 'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?w=300&h=300&fit=crop',\n    stock: 8,\n    maxStock: 15,\n    isAvailable: true,\n    category: 'digital',\n    rarity: 'common'\n  },\n  {\n    id: 'reward-4',\n    name: 'Team Lunch',\n    description: 'Join the team for a special lunch outing',\n    gemCost: 100,\n    image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?w=300&h=300&fit=crop',\n    stock: 0,\n    maxStock: 5,\n    isAvailable: false,\n    category: 'experience',\n    rarity: 'rare'\n  },\n  {\n    id: 'reward-5',\n    name: 'MacBook Pro',\n    description: 'Latest MacBook Pro 14\" - Grand Prize!',\n    gemCost: 500,\n    image: 'https://images.unsplash.com/photo-1517336714731-489689fd1ca8?w=300&h=300&fit=crop',\n    stock: 1,\n    maxStock: 1,\n    isAvailable: true,\n    category: 'physical',\n    rarity: 'legendary'\n  },\n  {\n    id: 'reward-6',\n    name: 'Coffee Mug',\n    description: 'Branded ceramic coffee mug',\n    gemCost: 25,\n    image: 'https://images.unsplash.com/photo-1514228742587-6b1558fcf93a?w=300&h=300&fit=crop',\n    stock: 12,\n    maxStock: 25,\n    isAvailable: true,\n    category: 'physical',\n    rarity: 'common'\n  }\n];\n\n// Mock client configurations for different clients\nexport const mockClientConfigs: Record<string, ClientConfig> = {\n  'christmas-corp': {\n    id: 'christmas-corp',\n    name: 'Christmas Corp',\n    logo: '/logo-christmas.png',\n    primaryColor: '#dc2626',\n    secondaryColor: '#16a34a',\n    accentColor: '#f59e0b',\n    backgroundColor: '#0f172a',\n    textColor: '#f8fafc',\n    fontFamily: 'Inter, system-ui, sans-serif',\n    calendarTitle: 'Christmas Corp Advent Calendar 2024',\n    welcomeMessage: 'Join our festive countdown! Complete daily challenges to earn rewards and climb the leaderboard.',\n    completionMessage: 'Congratulations! You\\'ve completed our Christmas journey. Happy holidays from all of us at Christmas Corp!',\n    socialLinks: {\n      website: 'https://christmascorp.com',\n      twitter: 'https://twitter.com/christmascorp',\n      instagram: 'https://instagram.com/christmascorp'\n    }\n  },\n  'winter-wonderland': {\n    id: 'winter-wonderland',\n    name: 'Winter Wonderland',\n    logo: '/logo-winter.png',\n    primaryColor: '#3b82f6',\n    secondaryColor: '#8b5cf6',\n    accentColor: '#06b6d4',\n    backgroundColor: '#1e1b4b',\n    textColor: '#e0e7ff',\n    fontFamily: 'Georgia, serif',\n    calendarTitle: 'Winter Wonderland Adventure',\n    welcomeMessage: 'Embark on a magical winter journey filled with daily surprises and challenges.',\n    completionMessage: 'You\\'ve conquered the winter wonderland! May your holidays be filled with magic and joy.',\n    socialLinks: {\n      website: 'https://winterwonderland.com'\n    }\n  },\n  'holiday-heroes': {\n    id: 'holiday-heroes',\n    name: 'Holiday Heroes',\n    logo: '/logo-heroes.png',\n    primaryColor: '#059669',\n    secondaryColor: '#dc2626',\n    accentColor: '#f59e0b',\n    backgroundColor: '#064e3b',\n    textColor: '#ecfdf5',\n    fontFamily: 'Roboto, sans-serif',\n    calendarTitle: 'Holiday Heroes Mission Calendar',\n    welcomeMessage: 'Every day is a new mission to spread holiday cheer. Are you ready to be a Holiday Hero?',\n    completionMessage: 'Mission accomplished, Hero! You\\'ve made this holiday season brighter for everyone.',\n    socialLinks: {\n      website: 'https://holidayheroes.org',\n      twitter: 'https://twitter.com/holidayheroes'\n    }\n  }\n};\n\n// Mock API service that mimics GameLayer API\nexport class MockGameLayerAPI {\n  private static currentClient = 'christmas-corp';\n  private static isAuthenticated = true; // Default to authenticated for demo\n\n  static async getCurrentUser(): Promise<User> {\n    if (!this.isAuthenticated) {\n      throw new Error('User not authenticated');\n    }\n    return mockUser;\n  }\n\n  static async loginUser(email: string, password: string): Promise<User> {\n    // Mock authentication - accept any email/password\n    this.isAuthenticated = true;\n    return mockUser;\n  }\n\n  static async registerUser(userData: { name: string; email: string; password: string }): Promise<User> {\n    this.isAuthenticated = true;\n    return {\n      ...mockUser,\n      name: userData.name,\n      email: userData.email,\n      totalPoints: 0,\n      gems: 0,\n      badges: []\n    };\n  }\n\n  static async getClientConfig(): Promise<ClientConfig> {\n    return mockClientConfigs[this.currentClient];\n  }\n\n  static async getCalendarData(): Promise<CalendarDay[]> {\n    return generateMockCalendar();\n  }\n\n  static async getTaskForDay(day: number): Promise<Task> {\n    return {\n      ...mockTasks[Math.floor(Math.random() * mockTasks.length)],\n      id: `task-day-${day}`\n    };\n  }\n\n  static async submitTaskCompletion(taskId: string, submission: any): Promise<{ success: boolean; points: number; badge?: Badge; gems: number }> {\n    // Mock successful completion\n    const points = Math.floor(Math.random() * 100) + 50;\n    const gems = Math.floor(Math.random() * 10) + 3;\n    \n    return {\n      success: true,\n      points,\n      gems,\n      badge: Math.random() > 0.7 ? mockUser.badges[0] : undefined\n    };\n  }\n\n  static async getLeaderboard(): Promise<LeaderboardEntry[]> {\n    return mockLeaderboard;\n  }\n\n  static async getRewards(): Promise<Reward[]> {\n    return mockRewards;\n  }\n\n  static async purchaseReward(rewardId: string): Promise<{ success: boolean; message: string }> {\n    const reward = mockRewards.find(r => r.id === rewardId);\n    if (!reward) {\n      return { success: false, message: 'Reward not found' };\n    }\n    if (!reward.isAvailable || reward.stock <= 0) {\n      return { success: false, message: 'Reward out of stock' };\n    }\n    if (mockUser.gems < reward.gemCost) {\n      return { success: false, message: 'Not enough gems' };\n    }\n    \n    // Simulate purchase\n    reward.stock -= 1;\n    if (reward.stock <= 0) {\n      reward.isAvailable = false;\n    }\n    mockUser.gems -= reward.gemCost;\n    \n    return { success: true, message: 'Reward purchased successfully!' };\n  }\n\n  static async trackEvent(eventName: string, eventData: any): Promise<void> {\n    console.log('Mock event tracked:', eventName, eventData);\n  }\n\n  static setCurrentClient(clientId: string) {\n    this.currentClient = clientId;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}