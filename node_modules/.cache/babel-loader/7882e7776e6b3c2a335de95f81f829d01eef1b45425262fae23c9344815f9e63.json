{"ast":null,"code":"// Utility to switch between different client configurations for demo purposes\nimport { MockGameLayerAPI, mockClientConfigs } from '../services/mockData';\nexport const switchClient = clientId => {\n  if (mockClientConfigs[clientId]) {\n    MockGameLayerAPI.setCurrentClient(clientId);\n    // Reload the page to apply new configuration\n    window.location.reload();\n  } else {\n    console.warn(`Client configuration not found for: ${clientId}`);\n  }\n};\nexport const getAvailableClients = () => {\n  return Object.keys(mockClientConfigs).map(id => ({\n    id,\n    name: mockClientConfigs[id].name\n  }));\n};\n\n// Add client switcher to window for easy demo access\nif (typeof window !== 'undefined') {\n  window.switchClient = switchClient;\n  window.getAvailableClients = getAvailableClients;\n  console.log('ðŸŽ„ Advent Calendar Demo Commands:');\n  console.log('â€¢ switchClient(\"christmas-corp\") - Switch to Christmas Corp theme');\n  console.log('â€¢ switchClient(\"winter-wonderland\") - Switch to Winter Wonderland theme');\n  console.log('â€¢ switchClient(\"holiday-heroes\") - Switch to Holiday Heroes theme');\n  console.log('â€¢ getAvailableClients() - List all available client configurations');\n}","map":{"version":3,"names":["MockGameLayerAPI","mockClientConfigs","switchClient","clientId","setCurrentClient","window","location","reload","console","warn","getAvailableClients","Object","keys","map","id","name","log"],"sources":["/Users/stevenjudge/Desktop/AI/advent/advent-calendar/src/utils/clientSwitcher.ts"],"sourcesContent":["// Utility to switch between different client configurations for demo purposes\nimport { MockGameLayerAPI, mockClientConfigs } from '../services/mockData';\n\nexport const switchClient = (clientId: string) => {\n  if (mockClientConfigs[clientId]) {\n    MockGameLayerAPI.setCurrentClient(clientId);\n    // Reload the page to apply new configuration\n    window.location.reload();\n  } else {\n    console.warn(`Client configuration not found for: ${clientId}`);\n  }\n};\n\nexport const getAvailableClients = () => {\n  return Object.keys(mockClientConfigs).map(id => ({\n    id,\n    name: mockClientConfigs[id].name\n  }));\n};\n\n// Add client switcher to window for easy demo access\nif (typeof window !== 'undefined') {\n  (window as any).switchClient = switchClient;\n  (window as any).getAvailableClients = getAvailableClients;\n  \n  console.log('ðŸŽ„ Advent Calendar Demo Commands:');\n  console.log('â€¢ switchClient(\"christmas-corp\") - Switch to Christmas Corp theme');\n  console.log('â€¢ switchClient(\"winter-wonderland\") - Switch to Winter Wonderland theme');\n  console.log('â€¢ switchClient(\"holiday-heroes\") - Switch to Holiday Heroes theme');\n  console.log('â€¢ getAvailableClients() - List all available client configurations');\n}\n"],"mappings":"AAAA;AACA,SAASA,gBAAgB,EAAEC,iBAAiB,QAAQ,sBAAsB;AAE1E,OAAO,MAAMC,YAAY,GAAIC,QAAgB,IAAK;EAChD,IAAIF,iBAAiB,CAACE,QAAQ,CAAC,EAAE;IAC/BH,gBAAgB,CAACI,gBAAgB,CAACD,QAAQ,CAAC;IAC3C;IACAE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC,MAAM;IACLC,OAAO,CAACC,IAAI,CAAC,uCAAuCN,QAAQ,EAAE,CAAC;EACjE;AACF,CAAC;AAED,OAAO,MAAMO,mBAAmB,GAAGA,CAAA,KAAM;EACvC,OAAOC,MAAM,CAACC,IAAI,CAACX,iBAAiB,CAAC,CAACY,GAAG,CAACC,EAAE,KAAK;IAC/CA,EAAE;IACFC,IAAI,EAAEd,iBAAiB,CAACa,EAAE,CAAC,CAACC;EAC9B,CAAC,CAAC,CAAC;AACL,CAAC;;AAED;AACA,IAAI,OAAOV,MAAM,KAAK,WAAW,EAAE;EAChCA,MAAM,CAASH,YAAY,GAAGA,YAAY;EAC1CG,MAAM,CAASK,mBAAmB,GAAGA,mBAAmB;EAEzDF,OAAO,CAACQ,GAAG,CAAC,mCAAmC,CAAC;EAChDR,OAAO,CAACQ,GAAG,CAAC,mEAAmE,CAAC;EAChFR,OAAO,CAACQ,GAAG,CAAC,yEAAyE,CAAC;EACtFR,OAAO,CAACQ,GAAG,CAAC,mEAAmE,CAAC;EAChFR,OAAO,CAACQ,GAAG,CAAC,oEAAoE,CAAC;AACnF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}